Проект являться блогом.
Каждый зарегистрированный пользователь может создать свою тему
и писать свои статьи которые он может как удалять так и редактировать, также он может
Оставлять комментарии.
Проект разработан и имеет архитектуру MVC.
Также в проекте используются паттерны 
(Singleton, facade, strategy, builde, dependency injection, repository, observer)
Что бы работать з проектом вам нужно
Склонить проект и назвать как вам нужно для примера мы используем blog
так как в некоторых views пути имеют название blog.
Ядро сайта лежит в папке framework
1) Auth - "facade" Регистрации та авторизации
2) Database "Singleton" - Подключение к БД
3) ErrorReporting - Класс, который являться Регистрацией ошибок, Который используется Например в Регистрации та Авторизации. 
Цель которого есть вывод ошибок для юзера
4) posts - "facade" Управление постами, комментариями
5) src  
    1) "dependency injection" Containers Регистрация Контролеров та зависимых Класов которые реализуют детали
    2) Controller Родительский класс Контролеров.
    3) Database - Основная логика Выполнение к БД
    4) EventServiceProvider - "observer" - Возможность создавать события та слушателей, папка APP Event, Liseners
    5) Model Родительский класс Моделей.
    6) storage "strategy" - Сохранение Картинок там же и пути
    7) Router - Реализация Маршрутизации
---------------------------------------------
Пример добавление страницы 
1) app/router.php
$routs->setRout('куда юзер перейдет', $containers->controllers['Какой контролер будет используваться']);
Тепер нам осталось зарегистрировать  котролер в Containers
$this->controllers['Какой контролер будет используваться'] = new контролер(
           Зависимые классы которые используются в контролеру
);
